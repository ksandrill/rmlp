import pickle

import numpy as np

from draw import draw_cost, save_param_to_html
from rmlp import Rmlp
from util import load_data

weight_low = -0.001
weight_high = 0.02
input_size = 14
r_fc1_size = 42
r_fc2_size = 21
out_fc_size = 2

low = -0.95
high = 0.95
train_size = 6
target_size = 2
lr = 0.03
epoch_count = 1500
parameters_file_name = "../2hiddenLayer/model_2h_2"


def unpack(array: np.ndarray):
    return np.array([i[0] for i in array]), np.array([i[1] for i in array])


def load_model(model_path: str) -> (np.ndarray, np.ndarray, np.ndarray, float, float):
    with open(model_path, 'rb') as parameters_file:
        w1, w2, w3, stored_lr, stored_epoch_count = pickle.load(parameters_file)
    return w1, w2, w3, stored_lr, stored_epoch_count


def main():
    train_input, train_target, test_input, test_target = load_data("data.csv", train_size, target_size, low, high)
    rmlp = Rmlp(input_size, r_fc1_size, r_fc2_size, out_fc_size, weight_low, weight_high)
    cost_list = rmlp.fit(lr, epoch_count, list(zip(train_input, train_target)), parameters_file_name)
    train_cost = draw_cost(np.array(cost_list), "epoch", "mse", "cost_train")
    save_param_to_html(train_cost, parameters_file_name, "train_cost.html")



if __name__ == '__main__':
    main()
